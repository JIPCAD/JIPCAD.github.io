"use strict";(self.webpackChunkjipcad=self.webpackChunkjipcad||[]).push([[263],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(r),m=a,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5566:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),l=["components"],o={sidebar_position:2},s="Numerical Parameters and Sliders",u={unversionedId:"lang-ref/numerical-sliders",id:"lang-ref/numerical-sliders",isDocsHomePage:!1,title:"Numerical Parameters and Sliders",description:"Bank (Status: Up-to-date)",source:"@site/docs/lang-ref/numerical-sliders.md",sourceDirName:"lang-ref",slug:"/lang-ref/numerical-sliders",permalink:"/docs/lang-ref/numerical-sliders",editUrl:"https://github.com/JIPCAD/JIPCAD/docs/lang-ref/numerical-sliders.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/lang-ref/configuration"},next:{title:"Generators",permalink:"/docs/lang-ref/generators"}},c=[{value:"<strong>Bank</strong> <strong>(Status: Up-to-date)</strong>",id:"bank-status-up-to-date",children:[],level:2},{value:"<strong>Time-Varying Models</strong>",id:"time-varying-models",children:[],level:2}],d={toc:c};function p(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"numerical-parameters-and-sliders"},"Numerical Parameters and Sliders"),(0,i.kt)("h2",{id:"bank-status-up-to-date"},(0,i.kt)("strong",{parentName:"h2"},"Bank")," ",(0,i.kt)("strong",{parentName:"h2"},"(Status: Up-to-date)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"bank bankID\n set setID1 value1 start1 end1 step_size1\n ...\n set setIDN valueN startN endN step_sizeN\n list (slider_idlist)\nendbank\n")),(0,i.kt)("p",null,"Allows the user to change any numerical value in the ",(0,i.kt)("inlineCode",{parentName:"p"},".NOM")," file through an interactive slider in the GUI."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"setID"),": the variable to be parameterized."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"value"),": the initial value of the slider."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"start"),": the lower bound of the slider."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"end"),": the upper bound of the slider."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"step_size"),": the incremental step size of the slider."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"slider_idlist"),": the list of sliders to be displayed.")),(0,i.kt)("h2",{id:"time-varying-models"},(0,i.kt)("strong",{parentName:"h2"},"Time-Varying Models")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$frame\n$time\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"These are two global variables that can be used in any expression that evaluates a numerical value in JIPCAD."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$frame"),": An integer value that gets incremented by +1 after every rendering of the scene. All expressions comprising frame get updated before the scene is rendered again."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$time"),": A real value that keeps track of elapsed time (in seconds). After a rendering, the system-clock is interrogated and compared to the remembered system clock value after the previous rendering. The time difference is then added to the $time variable, and all expressions comprising $time get updated before the scene is rendered again.")))}p.isMDXComponent=!0}}]);