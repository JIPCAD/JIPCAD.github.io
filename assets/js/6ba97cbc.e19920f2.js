"use strict";(self.webpackChunkjipcad=self.webpackChunkjipcad||[]).push([[6430],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=u(n),f=a,m=s["".concat(c,".").concat(f)]||s[f]||d[f]||l;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=s;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},78:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return s}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={sidebar_position:5},c="Rendering Specifications",u={unversionedId:"lang-ref/rendering",id:"lang-ref/rendering",isDocsHomePage:!1,title:"Rendering Specifications",description:"Note: R, G, B values should be in the range 0.0 to 1.0",source:"@site/docs/lang-ref/rendering.md",sourceDirName:"lang-ref",slug:"/lang-ref/rendering",permalink:"/docs/lang-ref/rendering",editUrl:"https://github.com/JIPCAD/JIPCAD/docs/lang-ref/rendering.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"UI Controls",permalink:"/docs/lang-ref/UIControls"},next:{title:"Including Files",permalink:"/docs/lang-ref/include-files"}},p=[{value:"Camera (Status: Up-to-date)",id:"camera-status-up-to-date",children:[],level:2},{value:"Lights (Status: Up-to-date)",id:"lights-status-up-to-date",children:[],level:2},{value:"Viewports",id:"viewports",children:[],level:2},{value:"Global Frontface Color",id:"global-frontface-color",children:[],level:2},{value:"Local Frontface Color",id:"local-frontface-color",children:[],level:2},{value:"Global Backface Color",id:"global-backface-color",children:[],level:2},{value:"Local Backface Color",id:"local-backface-color",children:[],level:2}],d={toc:p};function s(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"rendering-specifications"},"Rendering Specifications"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: R, G, B values should be in the range 0.0 to 1.0")),(0,l.kt)("h2",{id:"camera-status-up-to-date"},"Camera (Status: Up-to-date)"),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"camera id\n    projection [NOME_PERSPECTIVE] or [NOME_ORTHOGRAPHIC] or [NOME_FRUTUM]\n    frustum [(left right bottom top nearPlane farPlane) for NOME_ORTHOGRAPHIC and NOME_FRUTUM; (fieldOfView aspectRatio nearPlane farPlane) for NOME_PERSPECTIVE]\n    ctranslate (tx ty tz)\n    crotate (rx ry rz){in degrees}\nendcamera\n"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"NOME_PERSPECTIVE"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"NOME_ORTHOGRAPHIC"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"NOME_FRUTUM"),": if present, specify the type of projection applied.\nIf none is supplied, the default is  ",(0,l.kt)("inlineCode",{parentName:"li"},"NOME_PERSPECTIVE"),"."))),(0,l.kt)("h2",{id:"lights-status-up-to-date"},"Lights (Status: Up-to-date)"),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"light id\n    type [NOME_DIRECTIONAL] or [NOME_AMBIENT]\n    color (R G B)\nendlight\n"))),(0,l.kt)("p",null,"Creates a light that can optionally be colored and a directed or ambient beam.")),(0,l.kt)("h2",{id:"viewports"},"Viewports"),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Viewport id\n    cameraID [camid]\n    (left top width height)\nendviewport\n"))),(0,l.kt)("p",null,"Single or multiple viewport setting.")),(0,l.kt)("h2",{id:"global-frontface-color"},"Global Frontface Color"),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"frontcolor (R G B) endfrontcolor\n"))),(0,l.kt)("p",null,"Set global frontface color, can't use slider to interactively change this.")),(0,l.kt)("h2",{id:"local-frontface-color"},"Local Frontface Color"),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"surface id (R G B) endsurface\n"))),(0,l.kt)("p",null,"Defines a surface color by its RGB values in the range ","[0, 1]",".")),(0,l.kt)("h2",{id:"global-backface-color"},"Global Backface Color"),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"backcolor (R G B) endbackcolor\n"))),(0,l.kt)("p",null,"Set global backface color, can't use slider to interactively change this.")),(0,l.kt)("h2",{id:"local-backface-color"},"Local Backface Color"),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"backface id color (R G B) endbackface\n"))),(0,l.kt)("p",null,"Set the backface color for each individual backface.")))}s.isMDXComponent=!0}}]);