"use strict";(self.webpackChunkjipcad=self.webpackChunkjipcad||[]).push([[185],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=u(n),m=i,g=s["".concat(c,".").concat(m)]||s[m]||p[m]||o;return n?r.createElement(g,a(a({ref:t},d),{},{components:n})):r.createElement(g,a({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},539:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>o,contentTitle:()=>a,metadata:()=>l,toc:()=>c,default:()=>d});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:3},a="Linux",l={unversionedId:"compiling/linux",id:"compiling/linux",isDocsHomePage:!1,title:"Linux",description:"Go to your desired repository in your terminal and run the following command to add all the JIPCAD files and required submodules.",source:"@site/docs/compiling/linux.md",sourceDirName:"compiling",slug:"/compiling/linux",permalink:"/docs/compiling/linux",editUrl:"https://github.com/JIPCAD/JIPCAD/docs/compiling/linux.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Windows",permalink:"/docs/compiling/windows"},next:{title:"Configuration",permalink:"/docs/lang-ref/configuration"}},c=[{value:"Dependencies",id:"dependencies",children:[{value:"Arch",id:"arch",children:[],level:3},{value:"Debian/Ubuntu",id:"debianubuntu",children:[],level:3},{value:"Fedora",id:"fedora",children:[],level:3},{value:"Installing Qt",id:"installing-qt",children:[],level:3}],level:2},{value:"Compile",id:"compile",children:[],level:2}],u={toc:c};function d({components:e,...t}){return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"linux"},"Linux"),(0,i.kt)("p",null,"Go to your desired repository in your terminal and run the following command to add all the JIPCAD files and required submodules."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone --recursive https://github.com/JIPCAD/JIPCAD\n")),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: I (Max Vogel) have only gone through the Arch installation process. I am copying the other dependencies from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cyj0912/Nome3/wiki"},"old wiki"),", but I have not tested them. If you are using a different distribution, please let me know if the below instructions work for you.")),(0,i.kt)("h3",{id:"arch"},"Arch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yay -S make gcc opensubdiv pugixml antlr4 qt5-3d\n")),(0,i.kt)("h3",{id:"debianubuntu"},"Debian/Ubuntu"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install g++ cmake libpugixml-dev qtbase5-dev\n")),(0,i.kt)("h3",{id:"fedora"},"Fedora"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo dnf install gcc-c++ cmake pugixml-devel qt5-devel OpenMesh-devel libuuid-devel\n")),(0,i.kt)("h3",{id:"installing-qt"},"Installing Qt"),(0,i.kt)("p",null,"The last compatible version of Qt is 5.12. You can install this by building from git, which Qt has a ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.qt.io/Building_Qt_5_from_Git"},"nice guide on"),". On Arch, I was unable to install from the regular Qt repo, ",(0,i.kt)("a",{parentName:"p",href:"https://code.qt.io/cgit/qt/qt5.git/"},"found here"),", and instead had to resort to the ",(0,i.kt)("a",{parentName:"p",href:"https://invent.kde.org/qt/qt/qt5/-/tree/5.15.2"},"KDE fork"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone -b 5.12 --recursive https://invent.kde.org/qt/qt/qt5.git\ncd qt5\ngit checkout 5.12\nperl init-repository\n./configure\nsudo make -j1 install\nmkdir build && cd build\n")),(0,i.kt)("h2",{id:"compile"},"Compile"),(0,i.kt)("p",null,"To compile JIPCAD, run the following commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd JIPCAD\nmkdir build && cd build\ncmake .. && make\n")))}d.isMDXComponent=!0}}]);