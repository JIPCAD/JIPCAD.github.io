"use strict";(self.webpackChunkjipcad=self.webpackChunkjipcad||[]).push([[5032],{4396:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>a,metadata:()=>i,assets:()=>s,toc:()=>c,default:()=>u});var o=n(7462),r=(n(7294),n(3905));const l={title:"Striking Bell",authors:"Toby"},a=void 0,i={permalink:"/blog/2022/12/7/Toby",editUrl:"https://github.com/JIPCAD/JIPCAD/blog/2022-12-7-Toby.md",source:"@site/blog/2022-12-7-Toby.md",title:"Striking Bell",description:"Note: this project is the subject of the Level 5 Putting It All Together tutorial and can be constructed for yourself by following the steps there.",date:"2022-12-07T00:00:00.000Z",formattedDate:"December 7, 2022",tags:[],readingTime:2.225,truncated:!1,authors:[{name:"Toby Yegian",title:"JIPCAD Contributor",url:"https://github.com/tobyegg",imageURL:"/img/celtic-flower.png",key:"Toby"}],nextItem:{title:"Celtic Knot",permalink:"/blog/2022/10/29/Toby"}},s={authorsImageUrls:[void 0]},c=[{value:"Note: this project is the subject of the Level 5 Putting It All Together tutorial and can be constructed for yourself by following the steps there.",id:"note-this-project-is-the-subject-of-the-level-5-putting-it-all-together-tutorial-and-can-be-constructed-for-yourself-by-following-the-steps-there",children:[],level:4}],d={toc:c};function u({components:e,...t}){return(0,r.kt)("wrapper",(0,o.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"note-this-project-is-the-subject-of-the-level-5-putting-it-all-together-tutorial-and-can-be-constructed-for-yourself-by-following-the-steps-there"},"Note: this project is the subject of the Level 5 Putting It All Together tutorial and can be constructed for yourself by following the steps there."),(0,r.kt)("p",null,"This was my most difficult project, as I wanted to stretch the limits of JIPCAD somewhat. Most of my previous models--and indeed what JIPCAD is primarily intended for--is static depictions of geometric objects. My goal was to build a bell whose clapper would travel back and forth in a pendulum arc, and upon striking the side of the bell would cause lightning to shoot out the side, indicating noise."),(0,r.kt)("p",null,"I started by building the yoke from simple rectangles, and added some colors to my included Surfaces file (see ",(0,r.kt)("a",{parentName:"p",href:"/docs/common-include-files"},"Common Include Files"),") to do so--that's the Brown, Orange, and Zinc you can see towards the bottom of the file."),(0,r.kt)("p",null,"The bell was a little more difficult; the bottom was a simple torus, but the sides and cap of the bell were two shapes for which we didn't have generators--a paraboloid and a section of a hyperboloid, that had to intersect fairly seamlessly."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"paraboloid",src:n(8004).Z})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"hyperboloid",src:n(5353).Z})),(0,r.kt)("p",null,"These I built with general surfaces, which are highly flexible and I recommend to anyone with a specific shape in mind that has an equation (e.g. z = x^2/a^2 + y^2/b^2) but no generator. I added a cylinder and clapper to make a sphere, set them to move along an arc using $time and cosine functions, and ended up with the bell below:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"bellfront",src:n(4782).Z})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"bellside",src:n(2347).Z})),(0,r.kt)("p",null,"Unfortunately, general surfaces do not have any thickness the same way a torus with radius 3 does, so I ended up with problems:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"bellintersecting",src:n(7075).Z})),(0,r.kt)("p",null,"After some fiddling, I got that out of the way, but now I had a bigger problem: how could I make lightning appear on only one side of the bell at a time, only when the clapper struck, and make it disappear after striking? JIPCAD didn't support a max or if statement, and while the general surfaces do, they don't allow the use of $time or user parameters. ",(0,r.kt)("br",null),"\nAfter a significant struggle, I landed on time-based scaling: that is, if I could have the shape expand to full size when the clapper hit the bell, and otherwise be shrunk down to an infinitesimal point, I could model my desired behavior. After some muddling about with finding the correct scaling function (it was sin and cos^128), I finally finished the bell! Tragically I can't show a full gif--it would ruin the reveal too thoroughly, I'll leave that for after you build it for yourself. The full code is available for yourself at the end of the Putting It All Together ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorial/putting-together"},"tutorial"),", enjoy!"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"bell-lightning",src:n(1364).Z})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"bell-lightning-left",src:n(5688).Z})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"bell-lightning-right",src:n(1897).Z})))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),h=r,f=p["".concat(s,".").concat(h)]||p[h]||u[h]||l;return n?o.createElement(f,a(a({ref:t},d),{},{components:n})):o.createElement(f,a({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var c=2;c<l;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1364:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/Bell-lightning-2bfb56be25ddacbf5ff62f82ec16b8ee.png"},7075:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/bell-clapper-through-side-78c438559ed76fdeeb691569de4c2964.png"},4782:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/bell-front-d7309dacbc39050902f7337a61f35e3d.png"},5688:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/bell-lightning-left-9553ba5e7ef82f77c9acb1ad760385f2.png"},1897:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/bell-lightning-right-c86391b4d07ad2b0ffc78066de72c8dc.png"},2347:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/bell-side-1fabecc88f46a481b23dae37548ef834.png"},5353:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/Hyperboloid1-0a84eb2c687ca7d18358b2519030e6f8.png"},8004:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/paraboloid-dab306daccb7e1f08d6b990bbc1233a1.png"}}]);