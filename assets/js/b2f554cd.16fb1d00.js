"use strict";(self.webpackChunkjipcad=self.webpackChunkjipcad||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"Striking Bell","metadata":{"permalink":"/blog/2022/12/7/Toby","editUrl":"https://github.com/JIPCAD/JIPCAD/blog/2022-12-7-Toby.md","source":"@site/blog/2022-12-7-Toby.md","title":"Striking Bell","description":"Note: this project is the subject of the Level 5 Putting It All Together tutorial and can be constructed for yourself by following the steps there.","date":"2022-12-07T00:00:00.000Z","formattedDate":"December 7, 2022","tags":[],"readingTime":2.225,"truncated":false,"authors":[{"name":"Toby Yegian","title":"JIPCAD Contributor","url":"https://github.com/tobyegg","imageURL":"/img/celtic-flower.png","key":"Toby"}],"nextItem":{"title":"Celtic Knot","permalink":"/blog/2022/10/29/Toby"}},"content":"#### Note: this project is the subject of the Level 5 Putting It All Together tutorial and can be constructed for yourself by following the steps there.\\r\\n\\r\\nThis was my most difficult project, as I wanted to stretch the limits of JIPCAD somewhat. Most of my previous models--and indeed what JIPCAD is primarily intended for--is static depictions of geometric objects. My goal was to build a bell whose clapper would travel back and forth in a pendulum arc, and upon striking the side of the bell would cause lightning to shoot out the side, indicating noise.\\r\\n\\r\\nI started by building the yoke from simple rectangles, and added some colors to my included Surfaces file (see [Common Include Files](/docs/common-include-files)) to do so--that\'s the Brown, Orange, and Zinc you can see towards the bottom of the file.\\r\\n\\r\\nThe bell was a little more difficult; the bottom was a simple torus, but the sides and cap of the bell were two shapes for which we didn\'t have generators--a paraboloid and a section of a hyperboloid, that had to intersect fairly seamlessly.\\r\\n\\r\\n![paraboloid](/img/blogpics/paraboloid.png)\\r\\n\\r\\n![hyperboloid](/img/blogpics/Hyperboloid1.png)\\r\\n\\r\\nThese I built with general surfaces, which are highly flexible and I recommend to anyone with a specific shape in mind that has an equation (e.g. z = x^2/a^2 + y^2/b^2) but no generator. I added a cylinder and clapper to make a sphere, set them to move along an arc using $time and cosine functions, and ended up with the bell below:\\r\\n\\r\\n![bellfront](/img/bell-front.png)\\r\\n\\r\\n![bellside](/img/bell-side.png)\\r\\n\\r\\nUnfortunately, general surfaces do not have any thickness the same way a torus with radius 3 does, so I ended up with problems:\\r\\n\\r\\n![bellintersecting](/img/bell-clapper-through-side.png)\\r\\n\\r\\nAfter some fiddling, I got that out of the way, but now I had a bigger problem: how could I make lightning appear on only one side of the bell at a time, only when the clapper struck, and make it disappear after striking? JIPCAD didn\'t support a max or if statement, and while the general surfaces do, they don\'t allow the use of $time or user parameters. <br />\\r\\nAfter a significant struggle, I landed on time-based scaling: that is, if I could have the shape expand to full size when the clapper hit the bell, and otherwise be shrunk down to an infinitesimal point, I could model my desired behavior. After some muddling about with finding the correct scaling function (it was sin and cos^128), I finally finished the bell! Tragically I can\'t show a full gif--it would ruin the reveal too thoroughly, I\'ll leave that for after you build it for yourself. The full code is available for yourself at the end of the Putting It All Together [tutorial](/docs/tutorial/putting-together), enjoy!\\r\\n\\r\\n![bell-lightning](/img/Bell-lightning.png)\\r\\n\\r\\n![bell-lightning-left](/img/bell-lightning-left.png)\\r\\n\\r\\n![bell-lightning-right](/img/bell-lightning-right.png)"},{"id":"Celtic Knot","metadata":{"permalink":"/blog/2022/10/29/Toby","editUrl":"https://github.com/JIPCAD/JIPCAD/blog/2022-10-29-Toby.md","source":"@site/blog/2022-10-29-Toby.md","title":"Celtic Knot","description":"The Celtic Knot was one of my biggest projects and one of the ones I\'m most proud of. It involved taking the Celtic knot from the image below:","date":"2022-10-29T00:00:00.000Z","formattedDate":"October 29, 2022","tags":[],"readingTime":0.9,"truncated":false,"authors":[{"name":"Toby Yegian","title":"JIPCAD Contributor","url":"https://github.com/tobyegg","imageURL":"/img/celtic-flower.png","key":"Toby"}],"prevItem":{"title":"Striking Bell","permalink":"/blog/2022/12/7/Toby"},"nextItem":{"title":"Bowtie Sweep","permalink":"/blog/2022/9/14/Toby"}},"content":"The Celtic Knot was one of my biggest projects and one of the ones I\'m most proud of. It involved taking the Celtic knot from the image below:\\r\\n\\r\\n![img](/img/blogpics/celtic-knot-source.png)\\r\\n\\r\\nand turning it into an interactive mathmatical knot. The design followed multiple iterations, first with a set of two b-splines multiplied over each identical quarter of the knot. The effect was very \\"loopy\\", and while interesting was not what I had intended.\\r\\n\\r\\n![loopyknot](/img/blogpics/loopyknot1.png)\\r\\n\\r\\n![loopyknot2](/img/blogpics/loopyknot2.png)\\r\\n\\r\\nI then attempted to make the curve sharper at its points and simpler in construction. Ultimately, with some help from Prof. Sequin, I redefined my knot as a set of four short b-splines (it turns out a new one was needed for each sharp corner) multiplied over each eighth of the knot. The result was quite accurate:\\r\\n\\r\\n![goodknot](/img/blogpics/celtic-knot-finished.png)\\r\\n\\r\\nAnd for good measure, I then added a second identical knot and parametrized every dimension I could think of, allowing for manipulation of the design into very fun shapes.\\r\\n\\r\\n![funknot1](/img/blogpics/knot-manipulated1.png)\\r\\n![funknot2](/img/blogpics/knot-manipulated2.png)\\r\\n![funknot3](/img/blogpics/knot-manipulated3.png)\\r\\n\\r\\n\\r\\nAt some point, I hope to export some of these models and 3D print these awesome shapes."},{"id":"Bowtie Sweep","metadata":{"permalink":"/blog/2022/9/14/Toby","editUrl":"https://github.com/JIPCAD/JIPCAD/blog/2022-9-14-Toby/index.md","source":"@site/blog/2022-9-14-Toby/index.md","title":"Bowtie Sweep","description":"This is one of my first projects in JIPCAD, before I was very familiar with sweeps or (apparently) taking screenshots.","date":"2022-09-14T00:00:00.000Z","formattedDate":"September 14, 2022","tags":[],"readingTime":0.7,"truncated":false,"authors":[{"name":"Toby Yegian","title":"JIPCAD Contributor","url":"https://github.com/tobyegg","imageURL":"/img/celtic-flower.png","key":"Toby"}],"prevItem":{"title":"Celtic Knot","permalink":"/blog/2022/10/29/Toby"},"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"This is one of my first projects in JIPCAD, before I was very familiar with sweeps or (apparently) taking screenshots.\\r\\n\\r\\n![Bowtie Sweep](/img/BowtieSweep.PNG)\\r\\n\\r\\nThe blue outline on the left shows the intended path of the sweep, a cube with only one line connecting the top and bottom faces, and the right shows the actual sweep path. I was new at using B-splines when working on this project, and so struggled with understanding why the two weren\'t the same, as well as why my swept polygon was broken in several places and why half of my bowtie was black (meaning on the \\"inside\\" of the shape).  \\r\\nStill, it was an informative project that pushed me to design more intracite sweeps and later knots, and I was impressed at what I could come up with given very little experience or work in JIPCAD."},{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/JIPCAD/JIPCAD/blog/2021-11-1-welcome/index.md","source":"@site/blog/2021-11-1-welcome/index.md","title":"Welcome","description":"Welcome to the JIPCAD Exhibition Page, you are welcomed to post any of your exbihition here for the inspiration and entertainment of the whole JIPCAD community!","date":"2021-11-01T00:00:00.000Z","formattedDate":"November 1, 2021","tags":[{"label":"JIPCAD","permalink":"/blog/tags/jipcad"},{"label":"Exhibition","permalink":"/blog/tags/exhibition"}],"readingTime":0.14,"truncated":false,"authors":[{"name":"Xinyu Zhang","title":"JIPCAD Contributor","url":"https://github.com/Xinyuzhangg","imageURL":"https://github.com/Xinyuzhangg.png","key":"Xinyu"}],"prevItem":{"title":"Bowtie Sweep","permalink":"/blog/2022/9/14/Toby"},"nextItem":{"title":"Xinyu Zhang","permalink":"/blog/Xinyu-Zhang"}},"content":"Welcome to the JIPCAD Exhibition Page, you are welcomed to post any of your exbihition here for the inspiration and entertainment of the whole JIPCAD community!\\r\\n\\r\\n![Docusaurus Plushie](./lumpysphere.gif)"},{"id":"Xinyu-Zhang","metadata":{"permalink":"/blog/Xinyu-Zhang","editUrl":"https://github.com/JIPCAD/JIPCAD/blog/2021-10-29-Xinyu.md","source":"@site/blog/2021-10-29-Xinyu.md","title":"Xinyu Zhang","description":"This is my first blog for the JIPCAD!!!\ud83c\udf08","date":"2021-10-29T00:00:00.000Z","formattedDate":"October 29, 2021","tags":[{"label":"Subdivision","permalink":"/blog/tags/subdivision"},{"label":"Rendering","permalink":"/blog/tags/rendering"}],"readingTime":0.055,"truncated":false,"authors":[{"name":"Xinyu Zhang","title":"JIPCAD Contributor","url":"https://github.com/Xinyuzhangg","imageURL":"https://github.com/Xinyuzhangg.png","key":"Xinyu"}],"prevItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"This is my first blog for the JIPCAD!!!\ud83c\udf08\\r\\nI love JIPCAD!"}]}')}}]);