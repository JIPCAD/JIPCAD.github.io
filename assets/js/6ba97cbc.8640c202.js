"use strict";(self.webpackChunkjipcad=self.webpackChunkjipcad||[]).push([[430],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),f=a,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||i;return r?n.createElement(m,o(o({ref:t},c),{},{components:r})):n.createElement(m,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},78:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],s={sidebar_position:4},l="Rendering Specifications",p={unversionedId:"lang-ref/rendering",id:"lang-ref/rendering",isDocsHomePage:!1,title:"Rendering Specifications",description:"Camera (Status: Up-to-date)",source:"@site/docs/lang-ref/rendering.md",sourceDirName:"lang-ref",slug:"/lang-ref/rendering",permalink:"/docs/lang-ref/rendering",editUrl:"https://github.com/JIPCAD/NOME3/docs/lang-ref/rendering.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Generators",permalink:"/docs/lang-ref/generators"},next:{title:"Error Reporting Module",permalink:"/docs/error-report"}},c=[{value:"Camera (Status: Up-to-date)",id:"camera-status-up-to-date",children:[],level:2},{value:"Lights (Status: Up-to-date)",id:"lights-status-up-to-date",children:[],level:2},{value:"Viewports",id:"viewports",children:[],level:2},{value:"<strong>Rendering (as in SLIDE):</strong> (Status: Not available.)",id:"rendering-as-in-slide-status-not-available",children:[],level:2}],d={toc:c};function u(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"rendering-specifications"},"Rendering Specifications"),(0,i.kt)("h2",{id:"camera-status-up-to-date"},"Camera (Status: Up-to-date)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"camera id  \n Projection [NOME_PERSPECTIVE] or [NOME_ORTHOGRAPHIC] or [NOME_FRUTUM] \n frustum [(left right bottom top nearPlane farPlane) for NOME_ORTHOGRAPHIC and NOME_FRUTUM; (fieldOfView aspectRatio nearPlane farPlane) for NOME_PERSPECTIVE\n ctranslate (tx ty tz)\n crotate (rx ry rz){in degrees}\nendcamera\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"        * \u201cNOME_PERSPECTIVE\u201d or \u201c`NOME_ORTHOGRAPHIC`\u201d or \u201c`NOME_FRUTUM`\u201d:  if present, specify the type of projection applied.\n")),(0,i.kt)("p",null,"If none is supplied, the default is  ",(0,i.kt)("inlineCode",{parentName:"p"},"NOME_PERSPECTIVE"),"."),(0,i.kt)("h2",{id:"lights-status-up-to-date"},"Lights (Status: Up-to-date)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"light id\n    Type [NOME_DIRECTIONAL] or [NOME_AMBIENT]\n    Color (R G B)\nendlight\n")),(0,i.kt)("h2",{id:"viewports"},"Viewports"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Viewport id\n  cameraID [camid]\n  (left top width height)\nendviewport\n")),(0,i.kt)("h2",{id:"rendering-as-in-slide-status-not-available"},(0,i.kt)("strong",{parentName:"h2"},"Rendering (as in SLIDE):")," (Status: Not available.)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"All instances to be displayed could be placed in a group \u201cassembly.\u201d\nA render statement would then have an instance of \u201cassembly\u201d and also specify camera type, lights, and windows/viewports. Any number of render statements can be specified in a single file, but there must be at least one for anything to be displayed. This flexible matching of viewport, geometry root, and camera makes the render statement very general. Side-by-side viewports in a single window with slightly disparate views can be used to produce stereo viewing. A multiple window setup can provide different views on the same world. This, for example, could be used in the implementation of a driving simulator, with separate camera specifications and viewports corresponding to windshield, rear-view mirror and side-view mirror views.\n")))}u.isMDXComponent=!0}}]);